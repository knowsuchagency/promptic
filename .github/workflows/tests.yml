name: Tests

on:
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - '*.md'
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        model:
          [
            "gpt-4o-mini",
            "claude-3-haiku-20240307",
            "gemini/gemini-1.5-flash",
            "gpt-4o",
            "claude-3.5",
            "gemini/gemini-1.5-pro",
          ]
        include:
          - model: "gpt-4o-mini"
            model_type: "cheap"
          - model: "claude-3-haiku-20240307"
            model_type: "cheap"
          - model: "gemini/gemini-1.5-flash"
            model_type: "cheap"
          - model: "gpt-4o"
            model_type: "regular"
          - model: "claude-3.5"
            model_type: "regular"
          - model: "gemini/gemini-1.5-pro"
            model_type: "regular"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install uv
          uv sync

      - name: Run Tests
        timeout-minutes: 2
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          TEST_MODEL: ${{ matrix.model }}
          TEST_MODEL_TYPE: ${{ matrix.model_type }}
        run: |
          # Note: Some tests are expected to be skipped based on model capabilities
          uv run pytest --cov=promptic --cov-report=xml tests/
      

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
